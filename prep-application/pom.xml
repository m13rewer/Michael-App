<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.michael</groupId>
	<artifactId>prep-application</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.SR1</spring-cloud.version>
		<sonar.projectKey>prep-application</sonar.projectKey>
		<sonar.projectName>Prep Application</sonar.projectName>
		<sonar.projectVersion>2.1</sonar.projectVersion>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
	</properties>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
	</parent>
	<repositories>
		<repository>
			<id>splunk-artifactory</id>
			<name>Splunk Releases</name>
			<url>http://splunk.jfrog.io/splunk/ext-releases-local</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.splunk.logging</groupId>
				<artifactId>splunk-library-javalogging</artifactId>
				<version>1.6.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- <dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.9.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.11.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.11.Final</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency> -->
	
		
		

		<!-- Spring Boot dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Spring Cloud dependencies -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>

		<!-- H2 Database (In-Memory) -->
		<!-- <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc7</artifactId>
			<version>12.1.0.2</version>
		</dependency>
		<!-- Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>

		<!-- RestAssured Dependencies -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>3.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.splunk.logging</groupId>
			<artifactId>splunk-library-javalogging</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin -->
		<dependency>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>3.5.0.1254</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.2</version>
		</dependency>

		<!-- Zuul Dependency -->
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
		</dependency> -->

		<!-- https://mvnrepository.com/artifact/org.sonarsource.scanner.maven/sonar-maven-plugin -->
		<dependency>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>3.5.0.1254</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
		<!-- <dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.2</version>
		</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<build>
<!-- 		<finalName>prep-application</finalName>
 -->		<plugins>
			<!-- <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							Sets the path to the file which contains the execution data.
							<dataFile>target/jacoco.exec</dataFile>
							Sets the output directory for the code coverage report.
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- <configuration>
					<mainClass>
						com.michael.app.PrepApp</mainClass>
					<addResources>true</addResources>
				</configuration> -->
			</plugin>
		</plugins>
	</build>

	<!-- <parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> 
		<version>2.1.3.RELEASE</version> </parent> <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> 
		<java.version>1.8</java.version> <spring-cloud.version>Edgware.SR1</spring-cloud.version> 
		</properties> <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.cloud</groupId> 
		<artifactId>spring-cloud-dependencies</artifactId> <version>${spring-cloud.version}</version> 
		<type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> 
		<dependencies> Spring MVC <dependency> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency> 
		<groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId> 
		</dependency> provides you with JUnit, SpringTest (Spring Boot Test), AssertJ, 
		Hamcrest, Mockito, JSONassert, and JSONPath. <dependency> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-starter-test</artifactId> </dependency> <dependency> 
		<groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> 
		<scope>runtime</scope> </dependency> <dependency> <groupId>org.springframework.cloud</groupId> 
		<artifactId>spring-cloud-config-client</artifactId> </dependency> <dependency> 
		<groupId>log4j</groupId> <artifactId>log4j</artifactId> <version>1.2.17</version> 
		</dependency> Tell Spring Data what it will be talking to </dependencies> 
		<build> <finalName>prep-application</finalName> <plugins> <plugin> <groupId>org.jacoco</groupId> 
		<artifactId>jacoco-maven-plugin</artifactId> <version>0.8.2</version> <executions> 
		<execution> <id>prepare-agent</id> <goals> <goal>prepare-agent</goal> </goals> 
		</execution> <execution> <id>report</id> <phase>prepare-package</phase> <goals> 
		<goal>report</goal> </goals> </execution> <execution> <id>post-unit-test</id> 
		<phase>test</phase> <goals> <goal>report</goal> </goals> <configuration> 
		Sets the path to the file which contains the execution data. <dataFile>target/jacoco.exec</dataFile> 
		Sets the output directory for the code coverage report. <outputDirectory>target/jacoco-ut</outputDirectory> 
		</configuration> </execution> </executions> </plugin> <plugin> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-maven-plugin</artifactId> <configuration> <mainClass> 
		com.revature.screenforce.Application</mainClass> <addResources>true</addResources> 
		</configuration> </plugin> </plugins> </build> -->

</project>